{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearch","e","target","value","setState","props","placeholder","this","onChange","Component","ItemStatusFilter","type","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","TodoList","todos","elements","map","item","id","itemProps","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleImportant","toggleProperty","toggleDone","searchItem","arr","propName","oldItem","items","length","filter","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9c63635.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\n\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Todo List</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n    state = {\r\n        term: ''\r\n    };\r\n\r\n    onSearch = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({\r\n            term\r\n        });\r\n        this.props.onSearch(term);       \r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <input \r\n                className=\"form-control search-input\" \r\n                placeholder=\"type to search\" \r\n                value={this.state.term}\r\n                onChange={this.onSearch} />\r\n        );\r\n    };\r\n}","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;","import React, { Component } from 'react';\r\n\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"btn-group\">\r\n        <button type=\"button\" className=\"btn btn-info\">All</button>\r\n        <button type=\"button\" className=\"btn btn-outline-secondary\">Active</button>\r\n        <button type=\"button\" className=\"btn btn-outline-secondary\">Done</button>\r\n      </div>\r\n    );    \r\n  }\r\n}","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;","import React, { Component } from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n    render() {\r\n        const { label, onDeleted, onToggleImportant, onToggleDone, important, done } = this.props;\r\n\r\n        let classNames = 'todo-list-item';\r\n        if (done) {\r\n            classNames += ' done';\r\n        }        \r\n        if (important) {\r\n            classNames += ' important';\r\n        }\r\n\r\n        return (\r\n            <span className={classNames}>\r\n                <span \r\n                    className=\"todo-list-item-label\" \r\n                    onClick={onToggleDone}>\r\n                    {label}\r\n                </span>\r\n                <button\r\n                    type=\"button\" \r\n                    className=\"btn btn-outline-success btn-sm float-right\" \r\n                    onClick={onToggleImportant} >\r\n                    <i className=\"fa fa-exclamation\" />\r\n                </button>\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-outline-danger btn-sm float-right\" \r\n                    onClick={onDeleted}>\r\n                    <i className=\"fa fa-trash-o\" />\r\n                </button>\r\n            </span>\r\n        );\r\n    };\r\n}","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({todos, onDeleted, onToggleImportant, onToggleDone}) => {\r\n\r\n    const elements = todos.map((item) => {\r\n\r\n        const { id, ...itemProps } = item;\r\n\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <TodoListItem \r\n                    { ...itemProps } \r\n                    onDeleted={() => onDeleted(id)} \r\n                    onToggleImportant={() => onToggleImportant(id)} \r\n                    onToggleDone={() => onToggleDone(id)} />\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            { elements }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React, { Component } from 'react';\r\n\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n    state = {\r\n        label: ''\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { label } = this.state;\r\n        this.setState({\r\n            label: ''\r\n        });\r\n        const cb = this.props.onItemAdded || (() => {});\r\n        cb(label);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"item-add-form d-flex\" onSubmit={this.onSubmit}>\r\n                <input\r\n                    type=\"text\" \r\n                    className=\"form-control\"\r\n                    placeholder=\"What needs to be done?\" \r\n                    value={this.state.label} \r\n                    onChange={this.onLabelChange} />\r\n                <button \r\n                    type=\"submit\" \r\n                    className=\"btn btn-outline-secondary\">\r\n                    Add\r\n                </button>\r\n            </form>\r\n        );\r\n    };\r\n}","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport TodoList from '../todo-list';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n  maxId = 100;\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem('Drink coffee'),\r\n      this.createTodoItem('Drink tea'),\r\n      this.createTodoItem('Build react app'),\r\n      this.createTodoItem('Have a lunch')\r\n    ],\r\n    term: ''\r\n  };\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: this.maxId++\r\n    };\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n      const newArray = [\r\n        ...todoData.slice(0, idx), \r\n        ...todoData.slice(idx + 1)\r\n      ];\r\n\r\n      return {\r\n        todoData: newArray\r\n      };\r\n    });\r\n  }\r\n\r\n  addItem = (text) => {\r\n    const newItem = this.createTodoItem(text);\r\n\r\n    this.setState(({ todoData }) => {\r\n      const newArr = [\r\n        ...todoData, \r\n        newItem\r\n      ];\r\n\r\n      return {\r\n        todoData: newArr\r\n      };\r\n    });\r\n  }\r\n\r\n  toggleProperty(arr, id, propName) {\r\n    const idx = arr.findIndex((el) => el.id === id);\r\n    const oldItem = arr[idx];\r\n    const newItem = {\r\n      ...oldItem, \r\n      [propName]: !oldItem[propName]\r\n    };\r\n    return [\r\n      ...arr.slice(0, idx), \r\n      newItem,\r\n      ...arr.slice(idx + 1)\r\n    ];\r\n  }\r\n\r\n  toggleImportant = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'important')\r\n      };\r\n    });\r\n  }\r\n\r\n  toggleDone = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'done')\r\n      };\r\n    });\r\n  }\r\n  \r\n  search(items, term) {\r\n    if (term.length === 0) {\r\n      return items;\r\n    }\r\n\r\n    return items.filter((item) => {\r\n      return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n    });\r\n  }\r\n\r\n  searchItem = (term) => {\r\n    this.setState({\r\n      term\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { todoData, term } = this.state;\r\n\r\n    const visibleItems = this.search(todoData, term);\r\n\r\n    const doneCount = visibleItems.filter((el) => el.done).length;\r\n\r\n    const todoCount = visibleItems.length - doneCount;\r\n\r\n    return (\r\n      <div className=\"todo-app\">\r\n        <AppHeader toDo={todoCount} done={doneCount} />\r\n        <div className=\"top-panel d-flex\">\r\n          <SearchPanel onSearch={this.searchItem} />\r\n          <ItemStatusFilter />\r\n        </div>\r\n        <TodoList \r\n          todos={visibleItems} \r\n          onDeleted={this.deleteItem} \r\n          onToggleImportant={this.toggleImportant} \r\n          onToggleDone={this.toggleDone} />\r\n        <ItemAddForm onItemAdded={this.addItem}/>\r\n      </div>\r\n    );    \r\n  }\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/app';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}